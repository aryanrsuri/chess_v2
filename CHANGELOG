[ MANIFEST ]
Changelog for Chess in Rust project. Represents the entire project.
I follow a modified (simpler) semantic versioning system: RELEASE.FEATURE/COMMIT

[ TODO ]
Validation/Captures 
  * Establish legal moves for each piece
  * Board Conditions
    * En Pessant ( or is this a piece move)
    * Castling Rights
    * Stalemate
    * Check
    * Checkmate
    * Pawn promotion
  * is turn a legal move ?
  * is this a legal capture ?
Input
  * Make it easier to input moves?
  * Insted of b1 -> c3 (square->square) input, it should be kb1 -> c3 (piece->square) to be clearer
Serialisation
  * serialise to data format to pause/resume/export game state
Bitboard
  * Write a bitboard re-representation of Chess
  ( This will be useful for implementing engine, and general skill ) 
Engine
  * minimax
  * a-b pruning

[ UNRELEASED ]

[ RELEASED ]
v0.3/3dde329 Implemented pawn move validation
v0.2/0360ddb Finished board terminal formatting
v0.1/d59c74d Made game loop, board and piece improvements
v0.0/00a5392 Initial Piece struct

